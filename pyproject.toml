[tool.poetry]
name = "genie-tooling"
version = "0.1.0"
description = "A hyper-pluggable Python middleware for Agentic AI and LLM applications."
authors = ["Kal Aeolian"]
license = "MIT"
readme = "README.md"
packages = [{include = "genie_tooling", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10"
pydantic = "^2.5"
httpx = "^0.26.0"
sentence-transformers = "^2.2.2"
faiss-cpu = "^1.7.4"
chromadb-client = "^0.4.22"
jsonschema = "^4.19.0"
redis = "^5.0.1"
openai = "^1.6.1"
aiofiles = "^23.2.1"
beautifulsoup4 = "^4.12.3"
numpy = "^1.26.0"
google-generativeai = {version = "^0.7.2", optional = true}
bs4 = "^0.0.2"
# Added for SecureDockerExecutor (example, adjust as needed for actual implementation)
# docker = {version = "^7.0.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.8"
mypy = "^1.8"
ruff = "^0.1.9"
black = "^23.12.0"
pre-commit = "^3.6"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"

[tool.poetry.extras]
full = [
    "httpx", "sentence-transformers", "faiss-cpu", "chromadb-client",
    "jsonschema", "redis", "openai", "aiofiles", "beautifulsoup4", "numpy",
    "google-generativeai" # "docker" could be added here if made optional
]
web_tools = ["httpx", "beautifulsoup4", "trafilatura"] # Added trafilatura
openai_services = ["openai"]
local_rag = ["sentence-transformers", "faiss-cpu", "numpy", "aiofiles"]
distributed_rag = ["chromadb-client", "openai"]
ollama = ["httpx"]
gemini = ["google-generativeai"]
# secure_exec = ["docker"] # Example extra for the secure executor

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
select = ["E", "W", "F", "I", "C", "B", "Q", "ASYNC", "NPY", "PYI"]
ignore = ["E501"]
target-version = "py311"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = [
    "faiss.*", "sentence_transformers.*", "chromadb.*", "chromadb.config.*",
    "redis.*", "redis.asyncio.*", "redis.exceptions.*", "bs4.*",
    "google.generativeai.*", "google.ai.generativelanguage.*", "trafilatura.*"
    # "docker.*" # If docker library is added
]
ignore_missing_imports = true

[tool.black]
line-length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore:builtin type SwigPyObject has no __module__ attribute:DeprecationWarning",
    "ignore:builtin type SwigPyPacked has no __module__ attribute:DeprecationWarning",
    "ignore:builtin type swigvarlink has no __module__ attribute:DeprecationWarning",
]
markers = [
    "slow: marks tests as slow to run",
    "integration: marks integration tests",
    "needs_api_key: marks tests requiring live API keys (skip by default)",
]

[tool.poetry.plugins."genie_tooling.plugins"]
# Core Key Providers
"environment_key_provider_v1" = "genie_tooling.key_providers.impl.environment:EnvironmentKeyProvider"

# Core LLM Providers
"ollama_llm_provider_v1" = "genie_tooling.llm_providers.impl.ollama_provider:OllamaLLMProviderPlugin"
"gemini_llm_provider_v1" = "genie_tooling.llm_providers.impl.gemini_provider:GeminiLLMProviderPlugin"
"openai_llm_provider_v1" = "genie_tooling.llm_providers.impl.openai_provider:OpenAILLMProviderPlugin"

# Core Command Processors
"simple_keyword_processor_v1" = "genie_tooling.command_processors.impl.simple_keyword_processor:SimpleKeywordToolSelectorProcessorPlugin"
"llm_assisted_tool_selection_processor_v1" = "genie_tooling.command_processors.impl.llm_assisted_processor:LLMAssistedToolSelectionProcessorPlugin"

# Core Tools
"calculator_tool" = "genie_tooling.tools.impl.calculator:CalculatorTool"
"open_weather_map_tool" = "genie_tooling.tools.impl.openweather:OpenWeatherMapTool"
"generic_code_execution_tool" = "genie_tooling.tools.impl.code_execution_tool:GenericCodeExecutionTool"
"google_search_tool_v1" = "genie_tooling.tools.impl.google_search:GoogleSearchTool"
"sandboxed_fs_tool_v1" = "genie_tooling.tools.impl.sandboxed_fs_tool:SandboxedFileSystemTool"

# Core Definition Formatters
"human_readable_json_formatter_plugin_v1" = "genie_tooling.definition_formatters.impl.human_readable_json:HumanReadableJSONFormatter"
"openai_function_formatter_plugin_v1" = "genie_tooling.definition_formatters.impl.openai_function:OpenAIFunctionFormatter"
"compact_text_formatter_plugin_v1" = "genie_tooling.definition_formatters.impl.compact_text:CompactTextFormatter"

# Core RAG Components
"file_system_loader_v1" = "genie_tooling.document_loaders.impl.file_system:FileSystemLoader"
"web_page_loader_v1" = "genie_tooling.document_loaders.impl.web_page:WebPageLoader"
"character_recursive_text_splitter_v1" = "genie_tooling.text_splitters.impl.character_recursive:CharacterRecursiveTextSplitter"
"sentence_transformer_embedder_v1" = "genie_tooling.embedding_generators.impl.sentence_transformer:SentenceTransformerEmbedder"
"openai_embedding_generator_v1" = "genie_tooling.embedding_generators.impl.openai_embed:OpenAIEmbeddingGenerator"
"faiss_vector_store_v1" = "genie_tooling.vector_stores.impl.faiss_store:FAISSVectorStore"
"chromadb_vector_store_v1" = "genie_tooling.vector_stores.impl.chromadb_store:ChromaDBVectorStore"
"basic_similarity_retriever_v1" = "genie_tooling.retrievers.impl.basic_similarity:BasicSimilarityRetriever"

# Core Tool Lookup Providers
"embedding_similarity_lookup_v1" = "genie_tooling.tool_lookup_providers.impl.embedding_similarity:EmbeddingSimilarityLookupProvider"
"keyword_match_lookup_v1" = "genie_tooling.tool_lookup_providers.impl.keyword_match:KeywordMatchLookupProvider"

# Core Invocation Strategy Components
"default_async_invocation_strategy_v1" = "genie_tooling.invocation_strategies.impl.default_async:DefaultAsyncInvocationStrategy"
"jsonschema_input_validator_v1" = "genie_tooling.input_validators.impl.jsonschema_validator:JSONSchemaInputValidator"
"passthrough_output_transformer_v1" = "genie_tooling.output_transformers.impl.passthrough_transformer:PassThroughOutputTransformer"
"default_error_handler_v1" = "genie_tooling.error_handlers.impl.default_handler:DefaultErrorHandler"
"llm_error_formatter_v1" = "genie_tooling.error_formatters.impl.llm_formatter:LLMErrorFormatter"
"json_error_formatter_v1" = "genie_tooling.error_formatters.impl.json_formatter:JSONErrorFormatter"

# Core Caching Providers
"in_memory_cache_provider_v1" = "genie_tooling.cache_providers.impl.in_memory:InMemoryCacheProvider"
"redis_cache_provider_v1" = "genie_tooling.cache_providers.impl.redis_cache:RedisCacheProvider"

# Core Logging/Redaction
"default_log_adapter_v1" = "genie_tooling.log_adapters.impl.default_adapter:DefaultLogAdapter"
"noop_redactor_v1" = "genie_tooling.redactors.impl.noop_redactor:NoOpRedactorPlugin"

# Core Executors
# "pysandbox_executor_stub_v1" = "genie_tooling.code_executors.impl.pysandbox_executor_stub:PySandboxExecutorStub" # Kept commented
"secure_docker_executor_v1" = "genie_tooling.code_executors.impl.secure_docker_executor:SecureDockerExecutor" # ADDED NEW EXECUTOR
